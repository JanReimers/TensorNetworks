-GUI
    Done Separate norm status widgets for each site, update singles
    E/J plot for each site doesn't really work since the y range gets so tiny
        Done Fix some plots, plot dE vs site# on log scale
        Plot points instead of lines
        Does wxDrivet support log scales?
        Done Rank vs. site#
        Fix axis code to avoid scientific unless ymin=0 or ymax=0
    Play/Pause in one button.  Use icons?
    Get restart working(have restart do what start does now, get rid of start, play nad step will start it)
    Done Stop shoud kill the thread
    Done Split the classes into separate files wxMPSFrame.py is getting too big.
    Status bar. ModelName (from H), L,S, D, iter#, E, CPU & meminfo (use psutils)
    On startup Step should start the run
    Done Create Bond objects between sites.  Each site can see its left and right bond objects.
    Fix alignments on Ham tab
    Use eps values.
    Fresh check and build.

-Done Mega classes MPState MPSite are too big, how split up responsibilities?
    Move some stuff into bond objects
    Partially DONE.  Made more stuff private at least.
    separate out contraction functions into a separate .C file.  SHould they be non-members?
-Calc <Sx> <Sy> <Sz>
    Could start by calculating one density matrices.  Then ops are easy
-Correlation functions <Sa*Sa+n>-<Sa>*<Sa+n>
    Extend to pair density matricies.  It would interesting to see the eigen values of distant
    pair DMs.  Do the lowest two EVs drop with distance, indicating decrreasing entanglement?
-Why optimize site 1, just leave it a |up> and take out global SU(2) invariance
-Valgrind, any memeory leaks?
-Give Lanczos an initial guess from previous iteration.
-Speed up <E^2> contractions, take advantage of W shapes.  Make Dw2 a function of w1.
    Before Implementation:
        <E^2> contraction for L=10, S=2.5, D=4 took 10.6321 seconds.
        <E^2> contraction for L=10, S=0.5, D=16 took 28.8432 seconds.
    After implementation:
        <E^2> contraction for L=10, S=2.5, D=4 took 2.66917 seconds.
        <E^2> contraction for L=10, S=0.5, D=16 took 6.41037 seconds.
    Further reduced by return referneces in GetW calls
        <E^2> contraction for L=10, S=2.5, D=4 took 0.916441 seconds.
        <E^2> contraction for L=10, S=0.5, D=16 took 3.01753 seconds.


-Imag time evolution
-Periodic boundary conditions.  This is less useful than iMPS
-iMPS, iDMRG
-GUI using wxPython
    -What to show in screen?
        Lattice
        Vectors (Sx,Sy,Sz) project to 2D.
        Colours
            Site energy
            Bond entropy
            Normalization A,B,M
Done    Live Graphs
            E vs iter#
            Sigma(E)  vs iter#
            Bond entropy vs site#
            <S^2> vs site#
            <E> vs site#
            Rank & D vs site#
            Heff degeneracy vs site # (might be harder with lowest eigen value solvers)



DONE -S>1/2 in Hamiltonian.  SPeed is irrelevant here.
DONE -Keep intermediates when iterating L&R tensors for Heff.
DONE -Iterate function with delta(E) convergence
DONE -  Improve with <H^2>-<H>^2 convergence, You need converge in D for this to go to zero.
DONE -Show sparsisity (# non zero elements) in H_eff for each site.
DONE -Profile, where are we spending the most time?
DONE -Start using sparse eigen solver.  Used the PRIMME system.
